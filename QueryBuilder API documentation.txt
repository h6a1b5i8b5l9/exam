Пример использования:

	include_once 'QueryBuilder.php';

	QueryBuilder::query('get', 'users', ['username', '=', 'test']);

описание:
	
	Компонент QueryBuilder используется для исполнения запросов к базе данных.
	Компонент содержит только одну статичную открытую функцию для использования: query.
	Для использования этой функции надо подключить класс QueryBuilder и использовать статичную функцию query через него.

	Функция query принимает 3 параметра (string $action, string $table, array $parameters) :boolean|array.
	-Первый: $action это название действия, которое вы хотите использовать (из возможных это 'get', 'insert', 'update', 'delete');
	-Второй: $table это название таблицы базы данных к которой применяется действие;
	-Третий: $parameters зависит от исользуемой функции 'get', 'insert', 'update', или 'delete':
		'get' и 'delete' - [string $field, string $operator, string|int $value], где:
			$field - поле из таблицы базы данных;
			$operator - оператор сравнения (>,<,=,....);
			$value - значение выбранного поля.
		'instert' - [sting $key => mixed $value], где:
			$key - поле из таблицы базы данных;
			$value - значение, которое надо записать в выбранное поле;
			Пар типа $key => $value может быть несколько.
		'update' - [array [sting $key => mixed $value], array[string $field, string $operator, string|int $value2]], где:
			$key - поле из таблицы базы данных;
			$value - значение, которое надо записать в выбранное поле;
			Пар типа $key => $value может быть несколько.
			$field - поле из таблицы базы данных;
			$operator - оператор сравнения (>,<,=,....);
			$value2 - значение выбранного поля.

	При использовании 'insert', 'update', или 'delete' функция возвращает true если функция отработала успешно или false если нет.
	При использовании 'get' функция возвращает массив с найденными в базе данных объектами.
	